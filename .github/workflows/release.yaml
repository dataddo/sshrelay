name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  APP_NAME: ${{ github.event.repository.name }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Build binary
        run: |
          mkdir -p dist
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/${{ github.repository }}-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.APP_NAME }}-binaries
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.APP_NAME }}-binaries
          path: dist/

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/
          asset_name: ${{ env.APP_NAME }}-${{ matrix.goos }}-${{ matrix.goarch }}
          asset_content_type: application/octet-stream